{"version":3,"sources":["firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/Upload.js","hooks/update.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projStorage","storage","projFireStore","firestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","url","setUrl","error","setError","useEffect","storgeRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","a","getDownloadURL","createdAt","add","likes","dislikes","ProgressBar","setFile","i","length","motion","div","className","initial","width","animate","Upload","signIn","htmlFor","id","type","accept","onChange","e","alert","select","target","files","multiple","updateimg","update","store","where","get","then","querySnapshot","forEach","doc","increment","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","d","push","data","ImageGrid","setImage","map","val","layout","whileHover","opacity","img","src","alt","transition","delay","onClick","ThumbUp","ThumbDown","Modal","image","classList","contains","y","form","input","App","auth","GoogleAuthProvider","style","color","href","Twitter","GitHub","LinkedIn","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.b4690c18.chunk.js","sourcesContent":["// import * as firebase from \"firebase/app\";\r\nimport firebase from \"firebase\";\r\nimport \"firebase/storage\"; //to store images\r\nimport \"firebase/firestore\";\r\n// var firebase = require(\"firebase/app\");\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyA1cyQNPXcxBpvyZmnElvFludzHNf81AEE\",\r\n  authDomain: \"art-gallery-b03bf.firebaseapp.com\",\r\n  projectId: \"art-gallery-b03bf\",\r\n  storageBucket: \"art-gallery-b03bf.appspot.com\",\r\n  messagingSenderId: \"587050036528\",\r\n  appId: \"1:587050036528:web:2b978c2e59afd4c8e7ecf5\"\r\n};\r\nfirebase.initializeApp(firebaseConfig); //to connect backend and frontend\r\n//to initialize storage service\r\nconst projStorage = firebase.storage();\r\nconst projFireStore = firebase.firestore();\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp();\r\n//exporting the services\r\nexport { projStorage, projFireStore, timestamp };\r\n","import { useState, useEffect } from \"react\";\r\nimport { projStorage, projFireStore, timestamp } from \"../firebase/config.js\";\r\n//creating custom hooks\r\n\r\n//takes in the uploaded file(image)\r\nconst useStorage = (file) => {\r\n  //creating 3 states\r\n  const [progress, setProgress] = useState(0);\r\n  const [url, setUrl] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  // const [likes, setLikes] = useState(0);\r\n  // const [dislikes, setDislikes] = useState(0);\r\n  useEffect(() => {\r\n    //logic to upload the file....triggered every time a new file is uploaded\r\n    const storgeRef = projStorage.ref(file.name); //creating a reference to the file default firebase in storage bucket\r\n    //asynchronously uploading the file in the bucket using the refrence\r\n    const collectionRef = projFireStore.collection(\"images\");\r\n    //creating a reference fo rcollection in the firebase firestore database\r\n\r\n    storgeRef.put(file).on(\r\n      \"state_changed\",\r\n      (snap) => {\r\n        let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n\r\n        //monitoring the state of upload and taking snapshots of the upload at various instance of time\r\n        setProgress(percentage);\r\n      },\r\n      (error) => {\r\n        setError(error);\r\n      },\r\n      async () => {\r\n        //generating an asynchronous function\r\n        const url = await storgeRef.getDownloadURL();\r\n        const createdAt = timestamp;\r\n        // collectionRef.add({ url: url, createdAt });\r\n        collectionRef.add({\r\n          url: url,\r\n          createdAt: createdAt,\r\n          likes: 0,\r\n          dislikes: 0\r\n        });\r\n        //adding data to the database using the reference\r\n        //created at is uset to store the timestamp\r\n        setUrl(url);\r\n      }\r\n    );\r\n  }, [file]);\r\n\r\n  return { progress, url, error };\r\n};\r\n\r\nexport default useStorage;\r\n","import React, { useEffect } from \"react\";\r\nimport useStorage from \"../hooks/useStorage.js\";\r\nimport { motion } from \"framer-motion\";\r\nconst ProgressBar = ({ file, setFile }) => {\r\n  //obtaining the url and the progress of upload\r\n  var url, progress;\r\n  // file.forEach(element => {\r\n  //  return  { url, progress } = useStorage(element);\r\n  // });\r\n  for (var i = 0; i < file.length; i++) {\r\n    var { url, progress } = useStorage(file[i]);\r\n  }\r\n\r\n  // console.log(progress, url);\r\n  //logs the percentage of upload and the url at which the image is uploaded\r\n  useEffect(() => {\r\n    if (url) {\r\n      setFile(null);\r\n      //remove the progress bar once file is uploaded\r\n    }\r\n  }, [url, setFile]);\r\n  return (\r\n    <motion.div\r\n      className=\"progress-bar\"\r\n      initial={{ width: 0 }}\r\n      animate={{ width: progress + \"%\" }}\r\n    ></motion.div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React, { useState } from \"react\";\r\nimport ProgressBar from \"./ProgressBar\";\r\nconst Upload = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [signIn, setSignIn] = useState(false);\r\n  const changeHandeler = (e) => {\r\n    if (!signIn) {\r\n      alert(\"SignIN to upload\");\r\n    }\r\n    let select = e.target.files;\r\n    // console.log(upload);\r\n    if (select) {\r\n      //ensuring the file is selected and not null\r\n      setFile(select);\r\n      setError(\"\");\r\n    } else {\r\n      setFile(null);\r\n      setError(\"Please set an image file\");\r\n    }\r\n  };\r\n  return (\r\n    <form>\r\n      <label htmlFor=\"image\" id=\"label\">\r\n        <p>+</p>\r\n        <input\r\n          name=\"image\"\r\n          id=\"input\"\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={changeHandeler}\r\n          multiple\r\n        />\r\n      </label>\r\n      <div className=\"output\">\r\n        {error && <div className=\"error\">{error}</div>}\r\n        {/* {file && <div>{file.name}</div>} */}\r\n        {file && <ProgressBar file={file} setFile={setFile} />}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default Upload;\r\n","import firebase from \"firebase\";\r\nfunction updateimg(url, update) {\r\n  const store = firebase\r\n    .firestore()\r\n    .collection(\"images\")\r\n    .where(\"url\", \"==\", url);\r\n  if (update === \"likes\") {\r\n    store.get().then(function (querySnapshot) {\r\n      querySnapshot.forEach(function (doc) {\r\n        doc.ref.update({\r\n          likes: firebase.firestore.FieldValue.increment(1)\r\n        });\r\n      });\r\n    });\r\n  } else {\r\n    store.get().then(function (querySnapshot) {\r\n      querySnapshot.forEach(function (doc) {\r\n        doc.ref.update({\r\n          dislikes: firebase.firestore.FieldValue.increment(1)\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  return 1;\r\n}\r\nexport default updateimg;\r\n","import { useState, useEffect } from \"react\";\r\nimport { projectFireStore } from \"../firebase/config.js\";\r\nimport firebase from \"firebase\";\r\nconst useFirestore = (collection) => {\r\n  const [docs, setDocs] = useState([]);\r\n  //initially no data is retrived hence the docs is set to an empty array\r\n  useEffect(() => {\r\n    const unsub = firebase\r\n      .firestore()\r\n      .collection(collection)\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snap) => {\r\n        //a callback function ....listeneing to realtime data objects and notified on the snapshot\r\n        //takes a snapshot of the database at that moment in time\r\n        let doc = [];\r\n        snap.forEach((d) => {\r\n          doc.push({ ...d.data() });\r\n          //getting all the properties of the data\r\n        });\r\n        setDocs(doc);\r\n      });\r\n\r\n    return () => unsub();\r\n    //unsubscibing from the collection when no longer used\r\n  }, [collection]);\r\n  //collection here is used as the dependency in useEffect hooks,that gets triggered everytime the dependency changes\r\n\r\n  return { docs };\r\n};\r\n\r\nexport default useFirestore;\r\n","import React from \"react\";\r\nimport { Delete, ThumbDown, ThumbUp } from \"@material-ui/icons\";\r\nimport { motion } from \"framer-motion\";\r\nimport delImage from \"../hooks/delImage.js\";\r\nimport updateimg from \"../hooks/update.js\";\r\n//to use motion animations on an element ,preceed the element with motion.\r\nimport useFirestore from \"../hooks/useFirestore.js\";\r\n// import updateimg from \"../hooks/update.js\";\r\nconst ImageGrid = ({ setImage }) => {\r\n  const { docs } = useFirestore(\"images\");\r\n  // console.log(docs);\r\n\r\n  return (\r\n    <div className=\"img-grid\">\r\n      {docs &&\r\n        docs.map((val) => (\r\n          <motion.div\r\n            className=\"img-wrap\"\r\n            key={val.url}\r\n            layout //creates animation while rearranging\r\n            whileHover={{ opacity: 0.7 }}\r\n          >\r\n            <motion.img\r\n              src={val.url}\r\n              alt=\"image\"\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              transition={{ delay: 1 }}\r\n              onClick={() => setImage(val.url)}\r\n            />\r\n\r\n            <div className=\"bottom-content\">\r\n              <ThumbUp\r\n                onClick={() => {\r\n                  updateimg(val.url, \"likes\");\r\n                }}\r\n              />\r\n              <small>{val.likes}</small>\r\n              {/* <Delete\r\n                onClick={() => {\r\n                  delImage(val.url);\r\n                }}\r\n              /> */}\r\n              <ThumbDown\r\n                onClick={() => {\r\n                  updateimg(val.url, \"dislikes\");\r\n                }}\r\n              />\r\n              <small>{val.dislikes}</small>\r\n            </div>\r\n          </motion.div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageGrid;\r\n","import React from \"react\";\r\n\r\nimport { motion } from \"framer-motion\";\r\nconst Modal = ({ image, setImage }) => {\r\n  return (\r\n    //when an image is clicked then the modal is enlarged and receives the details of the uploaded image\r\n    <motion.div className=\"backdrop-content\"\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      className=\"backdrop\"\r\n      onClick={(e) => {\r\n        //ensures that when modal is clicked the modal closes and not when the image itself is clicked\r\n        if (e.target.classList.contains(\"backdrop\")) {\r\n          setImage(null);\r\n        }\r\n      }}\r\n    >\r\n      <motion.img\r\n        src={image}\r\n        alt=\"\"\r\n        initial={{ y: \"-100vh\" }}\r\n        animate={{ y: 0 }}\r\n      />\r\n      <motion.div>\r\n        <motion.div className=\"bottomo-content\">jhzjgdshjsgdh</motion.div>\r\n        <motion.form>\r\n          <motion.input type=\"text\" />\r\n        </motion.form>\r\n      </motion.div>\r\n    </motion.div>\r\n  );\r\n};\r\nexport default Modal;\r\n","import \"./styles.css\";\r\nimport Upload from \"./comps/Upload.js\";\r\nimport ImageGrid from \"./comps/ImageGrid.js\";\r\nimport Modal from \"./comps/Modal.js\";\r\nimport { useState } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport { Twitter, GitHub, LinkedIn } from \"@material-ui/icons\";\r\nexport default function App() {\r\n  const [image, setImage] = useState(null);\r\n  var provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 id=\"tagline\" style={{ color: \"#F87171\" }}>\r\n        Art Gallery\r\n      </h1>\r\n\r\n      {/* <div className=\"userManage\">\r\n      <button>Sign Up</button>\r\n      <button>Sign In</button>\r\n      </div> */}\r\n\r\n      <p id=\"line\">\r\n        If you are an artist share your creations for the world to see and\r\n        appreciate!!{\" \"}\r\n      </p>\r\n\r\n      <Upload />\r\n      <ImageGrid setImage={setImage} />\r\n      {image && <Modal image={image} setImage={setImage} />}\r\n      <div className=\"footer\">\r\n        <a href=\"https://twitter.com/AdhishreyaP\" target=\"_blank\">\r\n          {\" \"}\r\n          <Twitter />\r\n        </a>\r\n        <a href=\"https://github.com/Adhishreya\" target=\"_blank\">\r\n          {\" \"}\r\n          <GitHub />\r\n        </a>\r\n        <a\r\n          href=\"https://www.linkedin.com/in/adhishreya-p-129376167/\"\r\n          target=\"_blank\"\r\n        >\r\n          {\" \"}\r\n          <LinkedIn />\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}